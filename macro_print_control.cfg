#-------------PRINT CONTROL-------------------#
[gcode_macro PRINT_WARMUP]
description: Perform initial homing and heating tasks
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP | default(220) | float %}
    {% set BED_TEMP = params.BED_TEMP | default(110) | float %}
    {% set CHAMBER_TEMP = params.CHAMBER_TEMP | default(60) | float %}
    CG28                                 # home printer
    move_to_center
    _SET_FAN_SPEED PERCENT=50
    STATUS_HEATING
    # https://jinja.palletsprojects.com/en/2.11.x/templates/#max
    M104 S{ [EXTRUDER_TEMP * 0.75, 175]|max }        # set extruder temperature to 75% or 175c
    M190 S{BED_TEMP}                    # set bed temperature
    # wait for the print bed to reach thermal equilibrium
    HEAT_SOAK HEATER='heater_bed' TARGET={BED_TEMP} SOAKER='temperature_sensor chamber_temp' SOAK_TEMP={CHAMBER_TEMP}

#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
description: Used to perform start of print actions
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
#    {% set MATERIAL = params.MATERIAL|default(default)|string %}
    BED_MESH_CLEAR
    STATUS_HEATING ;lED update
    M140 S{BED_TEMP}
    M190 S{BED_TEMP}
    _SET_FAN_SPEED PERCENT=0
    G90 ;Use absolute coordinates
    G32 ;Home XYZ - QGL - Home XYZ
    BED_MESH_CALIBRATE
    M109 S{EXTRUDER_TEMP}
    #PRIME_NOZZLE ;purge line
    CLEAN_NOZZLE
    G28
    CALIBRATE_Z
    PRIME_NOZZLE
    STATUS_PRINTING ;lED update#

[gcode_macro PRIME_NOZZLE] 
description: prints a purge line
gcode: 
    SAVE_GCODE_STATE NAME=PRIME_NOZZLE_STATE 
    
    M117 Priming 
    G90 ; Absolute coordinates. 
    M83 ; Relative extruder mode. 
    G92 E0 ; Move to start of line. 
    G1 Z10 F900 
    G1 Y3 X3 F18000 
    G1 Z0.2 F900 ; Print the line. 
    G91 ; Relative coordinates. 
    G1 X100 E25 F1000 ; Extrude filament 25mm (how much it retracted in PRINT_END). 
    G1 Y-2 F1000 
    G1 X-60 E9 F1000 ; Print second part of the line. 
    G1 E-0.5 F3000 ; Retract to avoid stringing. 
    G1 X0.5 E0 F1000 ; Wipe back to break string. 
    G1 X-5.5 E0 F1000 ; Wipe forward to break string. 
    
    RESTORE_GCODE_STATE NAME=PRIME_NOZZLE_STATE

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    STOP_HEAT_SOAK
    CANCEL_PRINT_BASE
    TURN_OFF_HEATERS
    STOP_HEAT_SOAK



[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
rename_existing: _HEAT_SOAK__BASE_RESUME
gcode:
    HEAT_SOAK_RESUME ON_RESUME=_HEAT_SOAK__BASE_RESUME
    HEAT_SOAK_RESUME
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END